language: java
jdk: oraclejdk7
env:
  matrix:
    - ANDROID_SDKS=android-8 ANDROID_TARGET=android-8 ANDROID_ABI=armeabi
    - ANDROID_SDKS=android-10 ANDROID_TARGET=android-10 ANDROID_ABI=armeabi
    - ANDROID_SDKS=android-16 ANDROID_TARGET=android-16 ANDROID_ABI=armeabi-v7a
    - ANDROID_SDKS=android-17,sysimg-17 ANDROID_TARGET=android-17 ANDROID_ABI=armeabi-v7a
before_install:
  # Install base Android SDK
  - sudo apt-get update -qq
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq libstdc++6:i386 lib32z1; fi
  - wget -O android-sdk.tgz http://dl.google.com/android/android-sdk_r22.0.4-linux.tgz
  - tar xzf android-sdk.tgz
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools/18.1.0

  # List available SDKs
  - android list sdk

  # Install required components.
  # For a full list, run `android list sdk -a --extended`
  # Note that sysimg-16 downloads the ARM, x86 and MIPS images (we should optimize this).
  # Note that `echo y` only accepts the first license. This is actually convenient, since
  # it prevents the installation of the ATOM and MIPS emulator images. It might cause
  # issues in the future though.
  - echo y | android update sdk --filter 2,3,android-17,extra-android-support,$ANDROID_SDKS --no-ui --force > /dev/null

  # Print info
  - echo $ANDROID_HOME
  - ls $ANDROID_HOME/tools
  - ls $ANDROID_HOME/platform-tools
  - ls $ANDROID_HOME/build-tools/18.1.0

  # Create and start emulator - only needed when testing with Robotium
  # echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
  # emulator -avd test -no-skin -no-audio -no-window &

  # Integrate Google Play Services dependencies.
  - git clone https://github.com/mosabua/maven-android-sdk-deployer.git
  - ls .
  - cd maven-android-sdk-deployer/extras/google-play-services
  - mvn install
  - cd ../compatibility-v4
  - mvn install

before_script:
  # only needed when testing with Robotium
  # ./wait_for_emulator

# only needed when testing with Robotium
# script: mvn install -Pintegration-tests -Dandroid.device=test

script:
  - mvn integration-test